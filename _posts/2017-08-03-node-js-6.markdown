---
layout: post
title:  [node.js] http 모듈 - server 객체
date:   2017-08-03 19:32:00
author: Aaron Lee
categories: node.js
tags:	node.js book study
cover:  "/assets/node_js_book_01.png"
---

# server 객체
http 모듈의 [createServer()](https://nodejs.org/api/http.html#http_http_createserver_requestlistener) 메서드를 사용하여 server 객체를 생성할 수 있다.
```
// http 모듈 추출
var http = require('http');

// 웹 서버 생성
var server = http.createServer();

// 웹 서버 실행
server.listen(52273);
```

### *[server 객체 메서드](https://nodejs.org/api/http.html#http_class_http_server)*
- listen( prot[, callback] ) : 서버 실행
- close( ) : 서버 종료

```
// 웹 서버 생성
var server = require('http').createServer();

// 웹 서버 실행
server.listen(52273, function () {
    console.log('Server Running at http://127.0.0.1:52273');
});

// 10초 후 서버 종료
setInterval(function () {
    server.close();
}, 10000);
```

### *[server 객체 이벤트](https://nodejs.org/api/http.html#http_class_http_server)*
- request : 클라이언트가 요청할 때 발생
- connection : 클라이언트가 접속할 때 발생
- close : 서버가 종료될 때 발생
- checkContinue : 클라이언트가 지속적인 연결을 하고 있을 때 발생
- upgrade : 클라이언트가 HTTP 업그레이드를 요청할 때 발생
- clientError : 클라이언트에서 오류가 발생할 때 발생

```
// 웹 서버 생성
var server = require('http').createServer();

// 웹 서버 실행
server.listen(52273, function () {
    console.log('Server Running at http://127.0.0.1:52273');
});

// 웹 서버 이벤트 연결
server.on('request', function () {
   console.log('Request On!'); 
});

server.on('connection', function () {
   console.log('Connection On!'); 
});

server.on('close', function () {
   console.log('Colse On!'); 
});

// 10초 후 서버 종료
setInterval(function () {
    server.close();
}, 10000);
```

> NOTE_ createServer() 메서드의 매개변수
> - [http.createServer([requestListener])](https://nodejs.org/api/http.html#http_http_createserver_requestlistener)
> ```
> var server = require('http').createServer(function (request, response) {
>     response.writeHead(200, { 'Content-Type': 'text/html' });
>     response.end('<h1>Hello World ... !</h1>');
> }).listen(52273);
> ```